syntax = "proto3";

//message ParametersRequest {
  // Client registration request
//}

//message ParametersResponse {
  // Server response with values of g, h, and q
  //uint64 g = 1;
  //uint64 h = 2;
  //uint64 q = 3;
//}

message RegistrationRequest {
  // Client registration request
  string y1 = 1;
  string y2 = 2;
}

message RegistrationResponse {
  // Server response for registration
  bool success = 1;
}

message CommitmentChallengeRequest {
    // Client commitment request
    string r1 = 1;
    string r2 = 2;
}

message CommitmentChallengeResponse {
    // Server commitment challenge response
    string c = 1;
}

message VerifyProofRequest {
    // Client proof verification request
    string s = 1;
}

message VerifyProofResponse {
    // Server response for verification
    bool success = 1;
}

service ChaumPedersenService {
    // rpc Parameters(ParametersRequest) returns (ParametersResponse);
    rpc Register(RegistrationRequest) returns (RegistrationResponse);
    rpc CommitmentChallenge(CommitmentChallengeRequest) returns (CommitmentChallengeResponse);
    rpc VerifyProof(VerifyProofRequest) returns (VerifyProofResponse);
}
